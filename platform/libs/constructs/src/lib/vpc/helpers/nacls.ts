// TODO - Replace CIDR for the Private Nacls (App and Data) to VPC CIDR
export const publicNaclRules = {
  'allow-http-inbound': {
    ruleNumber: 100,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 80,
    toPort: 80,
  },
  'allow-https-inbound': {
    ruleNumber: 200,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 443,
    toPort: 443,
  },
  'allow-client-vpn-inbound': {
    ruleNumber: 300,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 443,
    toPort: 443,
  },
  'deny-sql-server-inbound': {
    ruleNumber: 400,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1433,
    toPort: 1434,
  },
  'deny-nfs-inbound': {
    ruleNumber: 500,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 2049,
    toPort: 2049,
  },
  'deny-mysql-inbound': {
    ruleNumber: 600,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 3306,
    toPort: 3306,
  },
  'deny-rdp-inbound': {
    ruleNumber: 700,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 3389,
    toPort: 3389,
  },
  'deny-postgresql-inbound': {
    ruleNumber: 800,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 5432,
    toPort: 5432,
  },
  'allow-tcp-ephemeral-inbound': {
    ruleNumber: 900,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1024,
    toPort: 65535,
  },
  'allow-all-outbound': {
    ruleNumber: 100,
    egress: true,
    protocol: '-1',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 0,
    toPort: 0,
  },
  'allow-custom-icmp': {
    ruleNumber: 1000,
    egress: false,
    protocol: 'icmp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: -1,
    toPort: -1,
  },
  'allow-ssh': {
    ruleNumber: 1100,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '10.0.0.0/8',
    fromPort: 22,
    toPort: 22,
  },
};

export const appNaclRules = {
  'deny-postgresql-inbound': {
    ruleNumber: 100,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 5432,
    toPort: 5432,
  },
  'deny-mysql-inbound': {
    ruleNumber: 200,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 3306,
    toPort: 3306,
  },
  'deny-nfs-inbound': {
    ruleNumber: 300,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 2049,
    toPort: 2049,
  },
  'deny-sql-server-inbound': {
    ruleNumber: 400,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'deny',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1433,
    toPort: 1434,
  },
  'allow-everything-else-inbound': {
    ruleNumber: 500,
    egress: false,
    protocol: '-1',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 0,
    toPort: 0,
  },
  'allow-all-outbound': {
    ruleNumber: 100,
    egress: true,
    protocol: '-1',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 0,
    toPort: 0,
  },
};

export const dataNaclRules = {
  'allow-postgresql-inbound': {
    ruleNumber: 100,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 5432,
    toPort: 5432,
  },
  'allow-mysql-inbound': {
    ruleNumber: 200,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 3306,
    toPort: 3306,
  },
  'allow-nfs-inbound': {
    ruleNumber: 300,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 2049,
    toPort: 2049,
  },
  'allow-sqlserver-inbound': {
    ruleNumber: 400,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1433,
    toPort: 1433,
  },
  'allow-oracle-inbound': {
    ruleNumber: 500,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1521,
    toPort: 1521,
  },
  'allow-ephemeral-ports': {
    ruleNumber: 600,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1024,
    toPort: 65535,
  },
  'allow-all-outbound': {
    ruleNumber: 100,
    egress: true,
    protocol: '-1',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 0,
    toPort: 0,
  },
};

export const adDataNaclRules = {
  'allow-dns-tcp-inbound': {
    ruleNumber: 100,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 53,
    toPort: 53,
  },
  'allow-dns-udp-inbound': {
    ruleNumber: 200,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 53,
    toPort: 53,
  },
  'allow-kerberos-authentication-tcp-inbound': {
    ruleNumber: 300,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 88,
    toPort: 88,
  },
  'allow-kerberos-authentication-udp-inbound': {
    ruleNumber: 400,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 88,
    toPort: 88,
  },
  'allow-change-set-password-tcp-inbound': {
    ruleNumber: 500,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 464,
    toPort: 464,
  },
  'allow-change-set-password-udp-inbound': {
    ruleNumber: 600,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 464,
    toPort: 464,
  },
  'allow-ldap-tcp-inbound': {
    ruleNumber: 700,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 389,
    toPort: 389,
  },
  'allow-ldap-udp-inbound': {
    ruleNumber: 800,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 389,
    toPort: 389,
  },
  'allow-ntp-inbound': {
    ruleNumber: 900,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 123,
    toPort: 123,
  },
  'allow-dce-epmap-inbound': {
    ruleNumber: 1000,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 135,
    toPort: 135,
  },
  'allow-https-smb-tcp-inbound': {
    ruleNumber: 1100,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 443,
    toPort: 445,
  },
  'allow-https-smb-udp-inbound': {
    ruleNumber: 1200,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 443,
    toPort: 445,
  },
  'allow-ldaps-tcp-inbound': {
    ruleNumber: 1300,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 636,
    toPort: 636,
  },
  'allow-139-tcp-inbound': {
    ruleNumber: 1400,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 139,
    toPort: 139,
  },
  'allow-139-udp-inbound': {
    ruleNumber: 1500,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 139,
    toPort: 139,
  },
  // Added wide range of ephemeral ports because of 20 rule limit in NACLs
  'allow-ephemeral-tcp-inbound': {
    ruleNumber: 1600,
    egress: false,
    protocol: 'tcp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1024,
    toPort: 65535,
  },
  'allow-ephemeral-udp-inbound': {
    ruleNumber: 1700,
    egress: false,
    protocol: 'udp',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 1024,
    toPort: 65535,
  },
  'allow-all-outbound': {
    ruleNumber: 100,
    egress: true,
    protocol: '-1',
    ruleAction: 'allow',
    cidrBlock: '0.0.0.0/0',
    fromPort: 0,
    toPort: 0,
  },
};
