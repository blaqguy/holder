// generated by cdktf get
// terraform-aws-modules/ecs/aws
import { TerraformModule, TerraformModuleUserConfig } from 'cdktf';
import { Construct } from 'constructs';
export interface EcsConfig extends TerraformModuleUserConfig {
  /**
   * Map of autoscaling capacity provider definitions to create for the cluster
   * @default [object Object]
   */
  readonly autoscalingCapacityProviders?: any;
  /**
   * If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
   */
  readonly cloudwatchLogGroupKmsKeyId?: string;
  /**
   * Number of days to retain log events
   * @default 90
   */
  readonly cloudwatchLogGroupRetentionInDays?: number;
  /**
   * A map of additional tags to add to the log group created
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly cloudwatchLogGroupTags?: { [key: string]: string };
  /**
   * The execute command configuration for the cluster
   * @default [object Object]
   */
  readonly clusterConfiguration?: any;
  /**
   * Name of the cluster (up to 255 letters, numbers, hyphens, and underscores)
   */
  readonly clusterName?: string;
  /**
   * Configures a default Service Connect namespace
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterServiceConnectDefaults?: { [key: string]: string };
  /**
   * Configuration block(s) with cluster settings. For example, this can be used to enable CloudWatch Container Insights for a cluster
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterSettings?: { [key: string]: string };
  /**
   * A map of additional tags to add to the cluster
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterTags?: { [key: string]: string };
  /**
   * Determines whether resources will be created (affects all resources)
   * @default true
   */
  readonly create?: boolean;
  /**
   * Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled
   * @default true
   */
  readonly createCloudwatchLogGroup?: boolean;
  /**
   * Determines whether the ECS task definition IAM role should be created
   */
  readonly createTaskExecIamRole?: boolean;
  /**
   * Determines whether the ECS task definition IAM policy should be created. This includes permissions included in AmazonECSTaskExecutionRolePolicy as well as access to secrets and SSM parameters
   * @default true
   */
  readonly createTaskExecPolicy?: boolean;
  /**
   * Determines whether to use Fargate or autoscaling for default capacity provider strategy
   * @default true
   */
  readonly defaultCapacityProviderUseFargate?: boolean;
  /**
   * Map of Fargate capacity provider definitions to use for the cluster
   * @default [object Object]
   */
  readonly fargateCapacityProviders?: any;
  /**
   * Map of service definitions to create
   * @default [object Object]
   */
  readonly services?: any;
  /**
   * A map of tags to add to all resources
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly tags?: { [key: string]: string };
  /**
   * Description of the role
   */
  readonly taskExecIamRoleDescription?: string;
  /**
   * Name to use on IAM role created
   */
  readonly taskExecIamRoleName?: string;
  /**
   * IAM role path
   */
  readonly taskExecIamRolePath?: string;
  /**
   * ARN of the policy that is used to set the permissions boundary for the IAM role
   */
  readonly taskExecIamRolePermissionsBoundary?: string;
  /**
   * Map of IAM role policy ARNs to attach to the IAM role
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly taskExecIamRolePolicies?: { [key: string]: string };
  /**
   * A map of additional tags to add to the IAM role created
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly taskExecIamRoleTags?: { [key: string]: string };
  /**
   * Determines whether the IAM role name (`task_exec_iam_role_name`) is used as a prefix
   * @default true
   */
  readonly taskExecIamRoleUseNamePrefix?: boolean;
  /**
   * A map of IAM policy [statements](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document#statement) for custom permission usage
   * @default [object Object]
   */
  readonly taskExecIamStatements?: any;
  /**
   * List of SecretsManager secret ARNs the task execution role will be permitted to get/read
   * @default arn:aws:secretsmanager:*:*:secret:*
   */
  readonly taskExecSecretArns?: string[];
  /**
   * List of SSM parameter ARNs the task execution role will be permitted to get/read
   * @default arn:aws:ssm:*:*:parameter/*
   */
  readonly taskExecSsmParamArns?: string[];
}
export class Ecs extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, config: EcsConfig = {}) {
    super(scope, id, {
      ...config,
      source: 'terraform-aws-modules/ecs/aws',
      version: '5.2.0',
    });
    this.autoscalingCapacityProviders = config.autoscalingCapacityProviders;
    this.cloudwatchLogGroupKmsKeyId = config.cloudwatchLogGroupKmsKeyId;
    this.cloudwatchLogGroupRetentionInDays = config.cloudwatchLogGroupRetentionInDays;
    this.cloudwatchLogGroupTags = config.cloudwatchLogGroupTags;
    this.clusterConfiguration = config.clusterConfiguration;
    this.clusterName = config.clusterName;
    this.clusterServiceConnectDefaults = config.clusterServiceConnectDefaults;
    this.clusterSettings = config.clusterSettings;
    this.clusterTags = config.clusterTags;
    this.create = config.create;
    this.createCloudwatchLogGroup = config.createCloudwatchLogGroup;
    this.createTaskExecIamRole = config.createTaskExecIamRole;
    this.createTaskExecPolicy = config.createTaskExecPolicy;
    this.defaultCapacityProviderUseFargate = config.defaultCapacityProviderUseFargate;
    this.fargateCapacityProviders = config.fargateCapacityProviders;
    this.services = config.services;
    this.tags = config.tags;
    this.taskExecIamRoleDescription = config.taskExecIamRoleDescription;
    this.taskExecIamRoleName = config.taskExecIamRoleName;
    this.taskExecIamRolePath = config.taskExecIamRolePath;
    this.taskExecIamRolePermissionsBoundary = config.taskExecIamRolePermissionsBoundary;
    this.taskExecIamRolePolicies = config.taskExecIamRolePolicies;
    this.taskExecIamRoleTags = config.taskExecIamRoleTags;
    this.taskExecIamRoleUseNamePrefix = config.taskExecIamRoleUseNamePrefix;
    this.taskExecIamStatements = config.taskExecIamStatements;
    this.taskExecSecretArns = config.taskExecSecretArns;
    this.taskExecSsmParamArns = config.taskExecSsmParamArns;
  }
  public get autoscalingCapacityProviders(): any | undefined {
    return this.inputs['autoscaling_capacity_providers'] as any | undefined;
  }
  public set autoscalingCapacityProviders(value: any | undefined) {
    this.inputs['autoscaling_capacity_providers'] = value;
  }
  public get cloudwatchLogGroupKmsKeyId(): string | undefined {
    return this.inputs['cloudwatch_log_group_kms_key_id'] as string | undefined;
  }
  public set cloudwatchLogGroupKmsKeyId(value: string | undefined) {
    this.inputs['cloudwatch_log_group_kms_key_id'] = value;
  }
  public get cloudwatchLogGroupRetentionInDays(): number | undefined {
    return this.inputs['cloudwatch_log_group_retention_in_days'] as number | undefined;
  }
  public set cloudwatchLogGroupRetentionInDays(value: number | undefined) {
    this.inputs['cloudwatch_log_group_retention_in_days'] = value;
  }
  public get cloudwatchLogGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['cloudwatch_log_group_tags'] as { [key: string]: string } | undefined;
  }
  public set cloudwatchLogGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['cloudwatch_log_group_tags'] = value;
  }
  public get clusterConfiguration(): any | undefined {
    return this.inputs['cluster_configuration'] as any | undefined;
  }
  public set clusterConfiguration(value: any | undefined) {
    this.inputs['cluster_configuration'] = value;
  }
  public get clusterName(): string | undefined {
    return this.inputs['cluster_name'] as string | undefined;
  }
  public set clusterName(value: string | undefined) {
    this.inputs['cluster_name'] = value;
  }
  public get clusterServiceConnectDefaults(): { [key: string]: string } | undefined {
    return this.inputs['cluster_service_connect_defaults'] as { [key: string]: string } | undefined;
  }
  public set clusterServiceConnectDefaults(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_service_connect_defaults'] = value;
  }
  public get clusterSettings(): { [key: string]: string } | undefined {
    return this.inputs['cluster_settings'] as { [key: string]: string } | undefined;
  }
  public set clusterSettings(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_settings'] = value;
  }
  public get clusterTags(): { [key: string]: string } | undefined {
    return this.inputs['cluster_tags'] as { [key: string]: string } | undefined;
  }
  public set clusterTags(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_tags'] = value;
  }
  public get create(): boolean | undefined {
    return this.inputs['create'] as boolean | undefined;
  }
  public set create(value: boolean | undefined) {
    this.inputs['create'] = value;
  }
  public get createCloudwatchLogGroup(): boolean | undefined {
    return this.inputs['create_cloudwatch_log_group'] as boolean | undefined;
  }
  public set createCloudwatchLogGroup(value: boolean | undefined) {
    this.inputs['create_cloudwatch_log_group'] = value;
  }
  public get createTaskExecIamRole(): boolean | undefined {
    return this.inputs['create_task_exec_iam_role'] as boolean | undefined;
  }
  public set createTaskExecIamRole(value: boolean | undefined) {
    this.inputs['create_task_exec_iam_role'] = value;
  }
  public get createTaskExecPolicy(): boolean | undefined {
    return this.inputs['create_task_exec_policy'] as boolean | undefined;
  }
  public set createTaskExecPolicy(value: boolean | undefined) {
    this.inputs['create_task_exec_policy'] = value;
  }
  public get defaultCapacityProviderUseFargate(): boolean | undefined {
    return this.inputs['default_capacity_provider_use_fargate'] as boolean | undefined;
  }
  public set defaultCapacityProviderUseFargate(value: boolean | undefined) {
    this.inputs['default_capacity_provider_use_fargate'] = value;
  }
  public get fargateCapacityProviders(): any | undefined {
    return this.inputs['fargate_capacity_providers'] as any | undefined;
  }
  public set fargateCapacityProviders(value: any | undefined) {
    this.inputs['fargate_capacity_providers'] = value;
  }
  public get services(): any | undefined {
    return this.inputs['services'] as any | undefined;
  }
  public set services(value: any | undefined) {
    this.inputs['services'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get taskExecIamRoleDescription(): string | undefined {
    return this.inputs['task_exec_iam_role_description'] as string | undefined;
  }
  public set taskExecIamRoleDescription(value: string | undefined) {
    this.inputs['task_exec_iam_role_description'] = value;
  }
  public get taskExecIamRoleName(): string | undefined {
    return this.inputs['task_exec_iam_role_name'] as string | undefined;
  }
  public set taskExecIamRoleName(value: string | undefined) {
    this.inputs['task_exec_iam_role_name'] = value;
  }
  public get taskExecIamRolePath(): string | undefined {
    return this.inputs['task_exec_iam_role_path'] as string | undefined;
  }
  public set taskExecIamRolePath(value: string | undefined) {
    this.inputs['task_exec_iam_role_path'] = value;
  }
  public get taskExecIamRolePermissionsBoundary(): string | undefined {
    return this.inputs['task_exec_iam_role_permissions_boundary'] as string | undefined;
  }
  public set taskExecIamRolePermissionsBoundary(value: string | undefined) {
    this.inputs['task_exec_iam_role_permissions_boundary'] = value;
  }
  public get taskExecIamRolePolicies(): { [key: string]: string } | undefined {
    return this.inputs['task_exec_iam_role_policies'] as { [key: string]: string } | undefined;
  }
  public set taskExecIamRolePolicies(value: { [key: string]: string } | undefined) {
    this.inputs['task_exec_iam_role_policies'] = value;
  }
  public get taskExecIamRoleTags(): { [key: string]: string } | undefined {
    return this.inputs['task_exec_iam_role_tags'] as { [key: string]: string } | undefined;
  }
  public set taskExecIamRoleTags(value: { [key: string]: string } | undefined) {
    this.inputs['task_exec_iam_role_tags'] = value;
  }
  public get taskExecIamRoleUseNamePrefix(): boolean | undefined {
    return this.inputs['task_exec_iam_role_use_name_prefix'] as boolean | undefined;
  }
  public set taskExecIamRoleUseNamePrefix(value: boolean | undefined) {
    this.inputs['task_exec_iam_role_use_name_prefix'] = value;
  }
  public get taskExecIamStatements(): any | undefined {
    return this.inputs['task_exec_iam_statements'] as any | undefined;
  }
  public set taskExecIamStatements(value: any | undefined) {
    this.inputs['task_exec_iam_statements'] = value;
  }
  public get taskExecSecretArns(): string[] | undefined {
    return this.inputs['task_exec_secret_arns'] as string[] | undefined;
  }
  public set taskExecSecretArns(value: string[] | undefined) {
    this.inputs['task_exec_secret_arns'] = value;
  }
  public get taskExecSsmParamArns(): string[] | undefined {
    return this.inputs['task_exec_ssm_param_arns'] as string[] | undefined;
  }
  public set taskExecSsmParamArns(value: string[] | undefined) {
    this.inputs['task_exec_ssm_param_arns'] = value;
  }
  public get autoscalingCapacityProvidersOutput() {
    return this.getString('autoscaling_capacity_providers')
  }
  public get cloudwatchLogGroupArnOutput() {
    return this.getString('cloudwatch_log_group_arn')
  }
  public get cloudwatchLogGroupNameOutput() {
    return this.getString('cloudwatch_log_group_name')
  }
  public get clusterArnOutput() {
    return this.getString('cluster_arn')
  }
  public get clusterCapacityProvidersOutput() {
    return this.getString('cluster_capacity_providers')
  }
  public get clusterIdOutput() {
    return this.getString('cluster_id')
  }
  public get clusterNameOutput() {
    return this.getString('cluster_name')
  }
  public get servicesOutput() {
    return this.getString('services')
  }
  public get taskExecIamRoleArnOutput() {
    return this.getString('task_exec_iam_role_arn')
  }
  public get taskExecIamRoleNameOutput() {
    return this.getString('task_exec_iam_role_name')
  }
  public get taskExecIamRoleUniqueIdOutput() {
    return this.getString('task_exec_iam_role_unique_id')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
